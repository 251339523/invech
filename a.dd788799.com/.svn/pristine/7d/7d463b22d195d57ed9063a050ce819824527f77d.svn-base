<?php
namespace app\common\model;
use think\Model;

class Money extends Model{

    protected $table = 'gygy_money';
    protected $createTime = 'created_at';
    protected $updateTime = 'updated_at';
    protected $autoWriteTimestamp = 'datetime';

    //$validate是数组或者验证器名
    //validate函数设置$validate成员变量
    //$validate = ['rule'=>[],'msg'=>[],];
    //$validate = 'User.edit';    //User验证器的edit场景;
            
    //自动完成 $auto = $insert + $update
    protected $auto = ['remark', 'direct'=>0,];
    //先判断默认值,remark没有对应的value时,value为null;
    //remark存在对应的set方法(修改器),还需要调用修改器;参数是remark对应的值;
    protected $insert = []; 
    protected $update = []; 

    /*
    protected function setRemarkAttr($value)
    {
        return $value = '备注';
    }
    */

    public static function getList($request){

        $params = $request->param();

        $query = self::alias('m')->field('m.*')->order('id desc');

        if($params['nickname']??0){
            $query->join('gygy_members u','u.uid = m.uid')->where('nickname','like','%'.$params['nickname'].'%');
        }

        if($params['direct']??0){
           $query->where('direct', $params['direct']);
        }

        if($params['type']??0){
           $query->where('m.type', $params['type']);
        }

        if($params['sdate']??0){            
            $query->where('m.created_at', '>=', $params['sdate']);
            if($params['edate']??0){
                if(strtotime($params['edate']) < strtotime($params['sdate'])){
                    $params['edate'] = null;
                }
           }
        }

        if($params['edate']??0){
            $query->where('m.created_at', '<=', $params['edate']);
        }

        $data = $query->paginate(10);
        
        return $data;
    }

    public function user()
    {
        return $this->belongsTo('Member','uid','uid');
    }

    public function item()
    {
        return $this->morphTo(['type','item_id'],[
            'recharge'  =>  'app\common\model\Order',
            'withdraw'  =>  'app\common\model\Withdraw',
            'bet'       =>  'app\common\model\Bet',
            'backwater'  =>  'app\common\model\BackWater',
            'bonus'     =>  'app\common\model\Bonus',
        ]);
    }

}
