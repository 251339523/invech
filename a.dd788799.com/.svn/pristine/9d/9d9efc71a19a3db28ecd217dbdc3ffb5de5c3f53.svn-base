<?php
namespace app\common\model\report;

use bong\foundation\QueryWrapper;
use app\common\validate\DateFormat;

use app\common\model\DailyBet;
use app\common\model\DailyDeposit;
use app\common\model\DailyWithdraw;
use app\common\model\DailyBonus;

trait ReportTrait
{
	//普通模型 生成 daily数据,用于DailyReport命令
    private static function attachToDailyPut(&$query,$date=null){

        if(!$date){
            $date = date('Y-m-d');
        }

        $query->where('created_at','between',[$date.' 00:00:00',$date.' 23:59:59',]);
    }

    public static function getDailyBuild($date=null){
    	$query = (new static)->db(true,false);
    	self::attachToDailyPut($query,$date);
    	return new QueryWrapper($query);
    }

    //红利日报,分组统计,统计各类红利信息
    public static function getBonusDailyBuild($date=null){
    	$query = (new static)->db(true,false);
    	self::attachToDailyPut($query,$date);
    	$query->group('bonus_id');
    	return new QueryWrapper($query);
    }



    //daily模型使用
    private static function attachToDaily(&$query,$field_date='date'){
        //日报表, 2018-04 2018-05;
        $params = request()->param();

        $date = date('Y-m');
        $sdate = $params['startTime']??$date;
        $edate = $params['endTime']??$date;

        $date_f = date("Y-m-01 00:00:00",strtotime($sdate));
        $date_t = date("Y-m-t 23:59:59", strtotime($edate)); 

        $query->where($field_date,'between',[$date_f,$date_t]);
    }

/*不为月报表 建月报表; 直接从日报表进行统计;
    private static function attachToMonth(&$query,$field_date='date'){

        $params = request()->param();
        $year = date('Y');
        $sdate = $params['startTime']??$year;
        $edate = $params['endTime']??$year;

        $date_f = date("Y-01-01 00:00:00",strtotime($sdate));
        $date_t = date("Y-12-31 23:59:59", strtotime($edate)); 

        $date_f = strtotime($date_f);
        $date_t = strtotime($date_t);

        //月报表存时间戳
        $query->where($field_date,'between',[$date_f,$date_t]);
    }
*/
    public static function getDailyReportBuild(){
    	$query = (new static)->db(true,false);
    	self::attachToDaily($query);
    	return $query->order('date desc');
    }

    //正常情况下,即便每日的存款为0,存款日报表都会生成一条存款为0的统计记录;
    //只需要做内连接即可; 目前的测试数据不完整,这里实现为外连接;
    public static function getDailyAllReport(){

        $fields = [
            /*
            'CASE
            WHEN b.date=NULL THEN b.date
            ELSE b.date
            END',
            */
            'b.date as date',  //DailyBet作为左连接的起点,date必然不为空;
            'ifnull(win_amount,0.00) as win_amount',
            'ifnull(d.suc_amount,0.00) as deposit_amount',
            'ifnull(w.suc_amount,0.00) as withdraw_amount',
            'ifnull(bo.bonus_total_amount,0.00) as bonus_amount',
        ];

        $query = (new DailyBet)->db(true,true)->alias('b');
        $query->join((new DailyDeposit)->getTable().' d','b.date=d.date','LEFT');
        $query->join((new DailyWithdraw)->getTable().' w','b.date=w.date','LEFT');
        //$query->join((new DailyBonus)->getTable().' bo','b.date=bo.date','LEFT');
        //红利用分组子查询;
        $bonus_fields = [
            'date',
            'sum(bonus_amount) as bonus_total_amount',
        ];
        $sub_query = DailyBonus::field($bonus_fields)->group('date')->select(false);
        $query->join('('.$sub_query.') bo','b.date=bo.date','LEFT');
        //join子查询,子查询的sql必须用()符号

        $query->field($fields)->order('b.date');

        self::attachToDaily($query,'b.date');

        return $query->paginate();
    }    
}
