<?php
namespace app\admin\controller;
use app\admin\Login;
use app\common\model\Message as MessageModel;
use app\common\model\Member as MemberModel;
use app\common\model\ActionLog as LogModel;
use think\Db;

class Message extends Login{

    public function outbox(){
        //自行查询;
        $request    =   request();
        $list       =   MessageModel::getList($request);
        $this->assign('list',$list);
        $this->view->page_header = '发件箱';
        return $this->fetch();
    }

    //发信
    public function send(){
        if(IS_GET){
            return view();
        }else{
            $request    =   request();
            $params     =   $request->param();
            $params['send_type']    =   "admin";
            $params['send_uid']     =   $this->user->id;
            if($params['recv_uid']??''){
                if(is_numeric($params['recv_uid'])){
                    $params['recv_uid'] = $params['recv_uid'];
                }else{
                    $userinfo = MemberModel::get(['username'=>trim($params['recv_uid'])]);
                    $params['recv_uid']  =   $userinfo ->uid;
                }
            }else{
                $params['recv_uid'] = '0';
            }
            $message    =   new MessageModel($params);
            $list       =   $message->validate('Message.index')->save($params);
            if($list){
                LogModel::log(LogModel::BUSINESS_TYPE_EDIT,$message,LogModel::BUSINESS_TYPES[LogModel::BUSINESS_TYPE_EDIT]);
                $this->success('操作成功');
            }else{
                $this->error($message->getError());
            }
            //MessageModel::create
        }
    }

    public function detail(){
        $request    =   request();
        $params     =   $request->param();
        $query      =   (new MemberModel)->getInboxBuilder('admin');
        $info       =   $query->where('id',intval($params['id']))->find();
        if(!$info->status){
            $query->where('id',intval($params['id']))->update(['status'=>1]);
        }
        $this->assign('info',$info);
        return view();
    }

    //收件箱支持软删除,请自行查询文档;
    //getInboxBuilder获取查询构造器,
    public function inbox(){
        $list = (new MemberModel)->getInboxBuilder('admin')->paginate();
        //其他条件自行添加
        //->where('status',0)->paginate();
        $this->assign('list',$list);
        $this->view->page_header = '收件箱';
        return $this->fetch();
    }

    public function news(){
        $list = Db::name('news')->order("created_at",'desc')->paginate();
         $this->view->page_header = '新闻';
        $this->assign('list',$list);
        $this->assign('types',[1=>"中奖资讯",2=>'活动公告']);
        return $this->fetch();
    }
    public function news_detail($id){
        $item = Db::name('news')->order("created_at",'desc')->find($id);
        $this->assign('info',$item);
        return view();
    }
    public function news_add(){
        if(IS_GET){
            return view();
        }else{
            $params     =   input('post.');
            $flag = Db::name('news')->insert($params);
            if($flag){
                //LogModel::log(LogModel::BUSINESS_TYPE_ADD,"增加",LogModel::BUSINESS_TYPES[LogModel::BUSINESS_TYPE_ADD]);
                $this->success('操作成功');
            }else{
                $this->error("操作失败");
            }
        }
    }
    public function news_edit($id){
         if(IS_GET){
             $this->assign('info',Db::name('news')->find($id));
            return view();
        }else {
             $params = input('post.');
             $flag = Db::name('news')->where('id', $id)->update($params);
             if($flag){
                //LogModel::log(LogModel::BUSINESS_TYPE_EDIT, "编辑", LogModel::BUSINESS_TYPES[LogModel::BUSINESS_TYPE_EDIT]);
                $this->success('操作成功');
            }else{
                $this->error("操作失败");
            }
         }
    }
    public function news_del($id){
         $flag = Db::name('news')->delete('id', $id);
         if($flag){
            //LogModel::log(LogModel::BUSINESS_TYPE_EDIT, "编辑", LogModel::BUSINESS_TYPES[LogModel::BUSINESS_TYPE_EDIT]);
            $this->success('操作成功');
        }else{
            $this->error("操作失败");
        }
    }
}


