<?php
namespace app\admin\controller;
use app\admin\Login;
use think\Cache;
use app\common\model\PaySet as PaySetModel;
use app\common\model\PayWay as PayWayModel;
use app\common\model\PayThird as PayThirdModel;
use app\common\model\PayChannel as PayChannelModel;
use app\common\model\ActionLog as LogModel;
class Pay extends Login{
   
  	 /**
     *菜单入口:支付通道分组
    */
     public function set(){
        $this->view->page_header = '支付类别';
		$request = request();
        $list = PaySetModel::getList($request);
        $this->assign('list',$list);
        return $this->fetch();
    }
    public function set_save(){
        $request = request();
        $params  = $request->param();
        $id     =  !empty($params['id'])? $params['id']:'';
        $name =  !empty($params['name'])? $params['name']:'';
        $type =  !empty($params['type'])? $params['type']:'';
        $sort =  !empty($params['sort'])? $params['sort']:'';
        $status =  !empty($params['status'])? $params['status']:'';
        $pic =  !empty($params['pic'])? $params['pic']:'';
        $data = [
            'name'      => $name,
            'type'      => $type,
            'sort'      => $sort,
            'status'    => $status,
            'pic'       => $pic,
        ];
        $res = [];
        if($id){
          
            $payset = PaySetModel::get(intval($id));
            $list = $payset->validate('Pay.save')->save($data);
            if($list){
                LogModel::log(LogModel::BUSINESS_TYPE_EDIT,$payset,LogModel::BUSINESS_TYPES[LogModel::BUSINESS_TYPE_EDIT]);
               $res['msg'] = "操作成功";
            }else{
                $res['msg']= $payset->getError();
            }
             echo json_encode($res);
        }else{
            
            $payset = new PaySetModel();
            $list = $payset->validate('Pay.save')->save($data);
            if($list){
               LogModel::log(LogModel::BUSINESS_TYPE_ADD,$payset,LogModel::BUSINESS_TYPES[LogModel::BUSINESS_TYPE_ADD]);
                $res['msg'] = "操作成功";
            }else{
                $res['msg']= $payset->getError();
             }
             echo json_encode($res);
        }
    }

    public function set_form(){
        
         $request = request();
         $params = $request->param(); 
         if(!empty($params['id'])){
             $info =  PaySetModel::get(['id'=>$params['id']]);
              $this->assign('info',$info);  
         }
        $paylist = PaySetModel::PAY_SET_TYPE;
        $this->assign('paylist',$paylist); 
          return view();
    }
	
     public function set_del(){
        $request = request();
        $params = $request->param();
        $payset =  PaySetModel::get(intval($params['id']));

        $list = $payset->delete();
        $res = [];
        if($list){
           LogModel::log(LogModel::BUSINESS_TYPE_DELE,$payset,LogModel::BUSINESS_TYPES[LogModel::BUSINESS_TYPE_DELE]);
           $res['msg'] = "操作成功";
        }else{
            $res['msg']= $payset->getError();
        }
        echo json_encode($res);
    }

     public function way(){
        $this->view->page_header = '支付方式';
        $request = request();
        $list = PayWayModel::getList($request);
        $setlist = PaySetModel::getAll();
        $this->assign('setlist',$setlist);
        $this->assign('list',$list);
        return $this->fetch();
    }
    public function way_save(){
        $request = request();
        $params = $request->param();
        $id =  !empty($params['id'])? $params['id']:'';
        $name =  !empty($params['name'])? $params['name']:'';
        $set_id =  !empty($params['set_id'])? $params['set_id']:'';
        $code =  !empty($params['code'])? $params['code']:'';
        $img =  !empty($params['img'])? $params['img']:'';
       $data = [
           
            'name'      => $name,
            'set_id'      => $set_id,
            'code'      => $code,
            'img'    => $img,
           
        ];
        $res = [];
        if($id){
          
            $payway = PayWayModel::get(intval($id));
            $list = $payway->validate('Pay.way')->save($data);
            if($list){
                LogModel::log(LogModel::BUSINESS_TYPE_EDIT,$payway,LogModel::BUSINESS_TYPES[LogModel::BUSINESS_TYPE_EDIT]);
               $res['msg'] = "操作成功";
            }else{
                $res['msg']= $payway->getError();
            }
             echo json_encode($res);
        }else{
            
            $payway = new PayWayModel();
            $list = $payway->validate('Pay.way')->save($data);
            if($list){
               LogModel::log(LogModel::BUSINESS_TYPE_ADD,$payway,LogModel::BUSINESS_TYPES[LogModel::BUSINESS_TYPE_ADD]);
                $res['msg'] = "操作成功";
            }else{
                $res['msg']= $payway->getError();
             }
             echo json_encode($res);
        }
    }

    public function way_form(){
        
         $request = request();
         $params = $request->param(); 
         if(!empty($params['id'])){
             $info =  PayWayModel::get(['id'=>$params['id']]);
              $this->assign('info',$info);  
         }
         $setlist = PaySetModel::getAll();
        $this->assign('setlist',$setlist);
          return view();
    }
    
     public function way_del(){
        $request = request();
        $params = $request->param();
        $payway =  PayWayModel::get(intval($params['id']));

        $list = $payway->delete();
        $res = [];
        if($list){
           LogModel::log(LogModel::BUSINESS_TYPE_DELE,$payway,LogModel::BUSINESS_TYPES[LogModel::BUSINESS_TYPE_DELE]);
           $res['msg'] = "操作成功";
        }else{
            $res['msg']= $payway->getError();
        }
        echo json_encode($res);
    }

  public function third(){
        $this->view->page_header = '支付方式';
        $request = request();
        $list = PayThirdModel::getList($request);
        $this->assign('list',$list);
        return $this->fetch();
    }
    public function third_save(){
        $request = request();
        $params = $request->param();
        $id =  !empty($params['id'])? $params['id']:'';
        $name =  !empty($params['name'])? $params['name']:'';
        $set_id =  !empty($params['set_id'])? $params['set_id']:'';
        $code =  !empty($params['code'])? $params['code']:'';
        $img =  !empty($params['img'])? $params['img']:'';
        $data = [
           
            'name'      => $name,
            'set_id'      => $set_id,
            'code'      => $code,
            'img'    => $img,
         ];
      
         $res = [];
        if($id){
          
            $paythird = PayThirdModel::get(intval($id));
            $list = $paythird->validate('Pay.way')->save($data);
            if($list){
                LogModel::log(LogModel::BUSINESS_TYPE_EDIT,$paythird,LogModel::BUSINESS_TYPES[LogModel::BUSINESS_TYPE_EDIT]);
               $res['msg'] = "操作成功";
            }else{
                $res['msg']= $paythird->getError();
            }
             echo json_encode($res);
        }else{
            
            $paythird = new PayThirdModel();
            $list = $paythird->validate('Pay.way')->save($data);
            if($list){
               LogModel::log(LogModel::BUSINESS_TYPE_ADD,$paythird,LogModel::BUSINESS_TYPES[LogModel::BUSINESS_TYPE_ADD]);
                $res['msg'] = "操作成功";
            }else{
                $res['msg']= $paythird->getError();
             }
             echo json_encode($res);
        }
    }

    public function third_form(){
        
         $request = request();
         $params = $request->param(); 
         if(!empty($params['id'])){
             $info =  PayThirdModel::get(['id'=>$params['id']]);
              $this->assign('info',$info);  
         }
         return view();
    }
    
     public function third_del(){
        $request = request();
        $params = $request->param();
        $paythird =  PayThirdModel::get(intval($params['id']));

        $list = $paythird->delete();
        $res = [];
        if($list){
           LogModel::log(LogModel::BUSINESS_TYPE_DELE,$paythird,LogModel::BUSINESS_TYPES[LogModel::BUSINESS_TYPE_DELE]);
           $res['msg'] = "操作成功";
        }else{
            $res['msg']= $paythird->getError();
        }
        echo json_encode($res);
    }

    public function channel(){
      	date_default_timezone_set('PRC');
       	$param = $this->request->param();
       	$setid ='';
       	$thirdid = '';
       	$set =  db('pay_set')->order('id asc')->select();
        if(!$set->isEmpty()){
        	$this->assign('set',$set);
        }
      
		$where =[];
		 if($param['setid']??''){
          	$where['pch.setid'] = ['eq',$param['setid']];
          	$setid = $param['setid'];
          	         
         }
         if($param['id']??''){
          	$where['pch.thirdid'] = ['eq',$param['id']];
          	$thirdid = $param['id'];
          
         }
     	 $join = [
		   	 	['pay_set ps','pch.setid=ps.id','left'],
		   	 	['pay_way pw','pch.set_configid=pw.id','left'],
		   	 	['pay_third pt','pch.thirdid=pt.id','left'],
		];
		config('paginate.query',$param);
        $channel =  db('pay_channel')->alias('pch')->field('pch.*, ps.name as pname,pw.name as pwname,pt.name as ptname')->join($join)->where($where)->order('pch.id asc')->paginate(10);
        $this->assign('setid',$setid); 
        $this->assign('thirdid',$thirdid); 
      	$this->assign('channel',$channel);
        $this->view->page_header = '支付渠道';
        return $this->fetch();
    }
    public function channel_save(){
        $request = request();
        $params = $request->param();
        $id =  !empty($params['id'])? $params['id']:'';
        $name =  !empty($params['name'])? $params['name']:'';
        $set_id =  !empty($params['set_id'])? $params['set_id']:'';
        $code =  !empty($params['code'])? $params['code']:'';
        $img =  !empty($params['img'])? $params['img']:'';
        $data = [
           
            'name'      => $name,
            'set_id'      => $set_id,
            'code'      => $code,
            'img'    => $img,
           
        ];
       $res = [];
        if($id){
           
            $paychannel = PayChannelModel::get(intval($id));
            $list = $paychannel->validate('Pay.way')->save($data);
            if($list){
                LogModel::log(LogModel::BUSINESS_TYPE_EDIT,$paychannel,LogModel::BUSINESS_TYPES[LogModel::BUSINESS_TYPE_EDIT]);
               $res['msg'] = "操作成功";
            }else{
                $res['msg']= $paychannel->getError();
            }
             echo json_encode($res);
        }else{
            
            $paychannel = new PayChannelModel();
            $list = $paychannel->validate('Pay.way')->save($data);
            if($list){
               LogModel::log(LogModel::BUSINESS_TYPE_ADD,$paychannel,LogModel::BUSINESS_TYPES[LogModel::BUSINESS_TYPE_ADD]);
                $res['msg'] = "操作成功";
            }else{
                $res['msg']= $paychannel->getError();
             }
             echo json_encode($res);
        }
    }

    public function channel_form(){
        
         $request = request();
         $params = $request->param(); 
         if(!empty($params['id'])){
             $info =  PayChannelModel::get(['id'=>$params['id']]);
              $this->assign('info',$info);  
         }
         return view();
    }

    public function channel_del(){
        $request = request();
        $params = $request->param();
        $paychannel =  PayChannelModel::get(intval($params['id']));

        $list = $paychannel->delete();
        $res = [];
        if($list){
           LogModel::log(LogModel::BUSINESS_TYPE_DELE,$paychannel,LogModel::BUSINESS_TYPES[LogModel::BUSINESS_TYPE_DELE]);
           $res['msg'] = "操作成功";
        }else{
            $res['msg']= $paychannel->getError();
        }
        echo json_encode($res);
    }

    public function upload(){

        date_default_timezone_set('PRC');
        //echo ROOT_PATH;die;
        $file = request()->file('file');
        //$path = "uploads/";
        $path = ROOT_PATH . 'houtai' . DS . 'uploads';
        $info = $file->move($path);
        if($info){
            //dump($info);return;
            $type = input('itemtype');
            $ext = $info->getExtension();
            if(!$type){//上传图片
                if(!in_array($ext,['png','PNG','jpg','gif','jpeg','bmp'])){
                    return $this->error("图片扩展名有误！");
                }
                
                $url = DS . 'uploads'. DS . $info->getSaveName();
                $res = [];
                $res['url'] = $url;
                $res['html'] = '<img src="' . $url . '"  class="preview">';         
               return $this->success('上次成功','',$res);
             
            }
            if(in_array($type, ['pubkey','prikey'])){//上传公私密钥
                if(!in_array($ext,['txt','pem'])){
                    return $this->error("文件扩展名有误");
                }
                
                $id = input('itemid');
                if(!$id){
                    return $this->error("id参数错误");
                }
                //$content = file_get_contents($filename);
                $filename = $info->getSaveName();
                $data = [$type=>$filename];
                $paythird = PayThirdModel::get(intval($id));
                $list = $paythird->save($data);
                if( $list){
                    return $this->success('上次成功','',[$filename]);
                }else{
                    return $this->error("上传失败");      
                }
               
            }
        }else{
            return $this->error("上传失败");
        }
        
      
    }
    
    
}