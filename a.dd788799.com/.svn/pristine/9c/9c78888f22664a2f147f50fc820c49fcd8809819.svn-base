<?php
namespace app\index\controller;
use app\index\Base;
use think\Db;
class Pay extends Base{
    
    public function _initialize(){    
          parent::_initialize();    
          $title = '充值中心';
          $this->assign('title',$title);
    }

    
    /*
     * 充值中心
     * 表结构set支付方式,set_config通道,thirdcode中间表,thirdpay线路
    */
    public function index(){

        //$_SESSION = ["front" => [ "uid" => 4,"username" =>  "test001","gid" => 7,] ]
        /*
        $uid = session('uid');
        if($uid){           
            if(config('pay_use_alone')){
                //原支付中心没有前台用户表(无法登陆,没有uid这样的session成员),用户名提交后保存在订单中
            }
            $username = session('username');
            $this->assign('username',$username);  
        }
        */

        $username = session('username');
        $this->assign('username',$username); 
        return $this->fetch();
    }
    
    public function member(){
        $username = session('username');
        if(!session('username')){
            echo "<script type='text/javascript'>alert('请登录之后再进行充值!');window.parent.location='/';</script>";
            exit();
        }
        $this->assign('username',$username);
        return $this->fetch();
    }
    
    /*
     * 支付方式列表,ajax
    */
    public function open(){
        $set = db('pay_set')->where("setclass = 0 and status = 0")->order("sort")->select();
        $num = count($set);                
        //return json(['stat'=>0,'num'=>$num,'set' => $set,]);        
        return ['stat'=>0,'num'=>$num,'set' => $set,];
    }   

    /*
     * 支付方式列表,手机版
    */
    public function appopen(){
        $set = db('pay_set')->where("setclass = 1 and status = 0")->order("sort")->find();//db中只有一种手机分类名为 手机APP

        $setconfig = db('pay_way')->where('set_id',$set['id'])->select();

        $num = count($setconfig);
        return ['stat'=>0,'num'=>$num,'value' => $setconfig,];
    } 

    /*
     * 一种支付方式,ajax
     */
    public function get_set(){
        $setid = input('setid');
        $set = db('pay_set')->where(['id'=>$setid,])->find();
        return ['stat'=>0,'value' => $set,];
    }

    /*
     * 一种支付的所有线路,ajax
     */
    public function code(){
        $setid = input('setid');

        //判断通道数量
        $scnum = db('pay_way')->where(['set_id' => $setid])->count();
        
        if($scnum>1){
            $set_config = db('pay_way')->where(['set_id' => $setid])->select();
            //$set_config = $set_config->toArray();
    
            foreach ($set_config as $k=>$v){
                $thirdcode = db('pay_channel')->where(['set_configid'=>$v['id'],'status'=>'0',])->find();
                //根据thirdcode表结构,此查询条件可能返回多条记录,这里只取一条(一个set_configid对应多个code)
                if($thirdcode){
                    $result[$k]['id'] = $thirdcode['id'];
                    $result[$k]['setid'] = $thirdcode['setid'];
                    $result[$k]['set_configid'] = $thirdcode['set_configid'];
                    $result[$k]['thirdid'] = $thirdcode['thirdid'];
                    $result[$k]['code'] = $thirdcode['code'];
                    $result[$k]['min'] = $thirdcode['min'];
                    $result[$k]['max'] = $thirdcode['max'];
                    $result[$k]['add_time'] = $thirdcode['add_time'];
                    $result[$k]['update_time'] = $thirdcode['update_time'];
                    $result[$k]['status'] = $thirdcode['status'];
                    $setconfig = db('pay_way')->where(['id' => $thirdcode['set_configid']])->find();
                    $result[$k]['img'] = $setconfig['img'];
                    $result[$k]['cashier'] = $thirdcode['cashier'];
                }
            }
            $num = count($result);
            $result = array_merge($result);//重排数组下标
        }else {
            $thirdcode = db('pay_channel')->where('setid = '.$setid.' and status = 0')->order('thirdid')->select();
            foreach ($thirdcode as $k=>$v){
                $result[$k]['id'] = $v['id'];
                $result[$k]['setid'] = $v['setid'];
                $result[$k]['set_configid'] = $v['set_configid'];
                $result[$k]['thirdid'] = $v['thirdid'];
                $result[$k]['code'] = $v['code'];
                $result[$k]['min'] = $v['min'];
                $result[$k]['max'] = $v['max'];
                $result[$k]['add_time'] = $v['add_time'];
                $result[$k]['update_time'] = $v['update_time'];
                if($v['thirdid']) $name = "线路".$this->numToWord($v['thirdid']);
                $result[$k]['name'] = $name;
                $setconfig = db('pay_way')->where(['id' => $v['set_configid']])->find();                
                $result[$k]['setconfigcode'] = $setconfig['code'];
                $thirdpay = db('pay_third')->where(['id' => $v['thirdid']])->find();
                $result[$k]['type'] = $thirdpay['type'];
                $result[$k]['cashier'] = $v['cashier'];
            }
            $num = count($result);
        }
        if(!$result){
            $data = [
                    'stat' => 1,
                    'msg'=>'您好，该支付方式正在维护中，请选择其它支付方式，或稍后访问！',
                ];
        }else {
            $data = [
                    'stat' => 0,
                    'num' => $num,
                    'scnum'=>$scnum,
                    'value'=>$result,
                ];
        }
        return $data;
    }

    /*
     * 一种支付的所有线路,ajax
     */
    public function appcode(){
        $scid = input('scid');

        $thirdcode = db('pay_channel')->where('set_configid',$scid)
        ->where('status',0)->order('thirdid')->select();

        if($thirdcode){
            foreach ($thirdcode as $k=>$v){
                $result[$k]['id'] = $v['id'];
                $result[$k]['setid'] = $v['setid'];
                $result[$k]['set_configid'] = $v['set_configid'];
                $result[$k]['thirdid'] = $v['thirdid'];
                if($v['thirdid']) $name = "线路".$this->numToWord($v['thirdid']);
                $result[$k]['name'] = $name;
                $result[$k]['code'] = $v['code'];
                $result[$k]['min'] = $v['min'];
                $result[$k]['max'] = $v['max'];
                $result[$k]['add_time'] = $v['add_time'];
                $result[$k]['update_time'] = $v['update_time'];
                $result[$k]['status'] = $v['status'];
                $setconfig = db('pay_way')->where('id',$v['set_configid'])->find();
                $result[$k]['setconfigcode'] = $setconfig['code'];
                $thirdpay = db('pay_third')->where('id',$v['thirdid'])->find();
                $result[$k]['type'] = $thirdpay['type'];
                $result[$k]['cashier'] = $v['cashier'];
            }
            $num = count($result);
            return ['stat' => 0,'num' => $num,'value'=>$result,];
        }else{
            return ['stat' => 1,'msg'=>'您好，该支付方式正在维护中，请选择其它支付方式，或稍后访问！',];
        }
    }

    /*
     * (一种支付的)一种渠道的所有线路,ajax
     */
    function code_all(){
        $setconfigid = input('setconfigid');                
        $thirdcode = db('pay_channel')->where('set_configid = '.$setconfigid.' and status = 0')->order('thirdid')->select();
        foreach ($thirdcode as $k=>$v){
            $result[$k]['id'] = $v['id'];
            $result[$k]['setid'] = $v['setid'];
            $result[$k]['set_configid'] = $v['set_configid'];
            $result[$k]['thirdid'] = $v['thirdid'];
            $result[$k]['code'] = $v['code'];
            $result[$k]['max'] = $v['max'];
            $result[$k]['min'] = $v['min'];
            $result[$k]['status'] = $v['status'];
            $result[$k]['add_time'] = $v['add_time'];
            $result[$k]['update_time'] = $v['update_time'];                        $result[$k]['cashier'] = $v['cashier'];
            if($v['thirdid']) $name = "线路".$this->numToWord($v['thirdid']);
            $result[$k]['name'] = $name;
            $setconfig = db('pay_way')->where(['id' => $v['set_configid']])->find();
            $result[$k]['setconfigcode'] = $setconfig['code'];
            $thirdpay = db('pay_third')->where(['id' => $v['thirdid']])->find();            
            $result[$k]['type'] = $thirdpay['type'];
        }
        $num = count($result);
        if($thirdcode){
            $data = [
                    'stat' => 0,
                    'num' => $num,
                    'value'=>$result,
                ];
        }else {
            $data =[
                    'stat' => 1,
                    'msg'=>'您好，该支付方式正在维护中，请选择其它支付方式，或稍后访问！',
                ];
        }
        return $data;
    }

    private function numToWord($num)
    {
        $chiNum = array('零', '一', '二', '三', '四', '五', '六', '七', '八', '九');
        $chiUni = array('','十', '百', '千', '万', '亿', '十', '百', '千');
        
        $chiStr = '';
        
        $num_str = (string)$num;
        
        $count = strlen($num_str);
        $last_flag = true; //上一个 是否为0
        $zero_flag = true; //是否第一个
        $temp_num = null; //临时数字
        
        $chiStr = '';//拼接结果
        if ($count == 2) {//两位数
            $temp_num = $num_str[0];
            $chiStr = $temp_num == 1 ? $chiUni[1] : $chiNum[$temp_num].$chiUni[1];
            $temp_num = $num_str[1];
            $chiStr .= $temp_num == 0 ? '' : $chiNum[$temp_num];
        }else if($count > 2){
            $index = 0;
            for ($i=$count-1; $i >= 0 ; $i--) {
                $temp_num = $num_str[$i];
                if ($temp_num == 0) {
                    if (!$zero_flag && !$last_flag ) {
                        $chiStr = $chiNum[$temp_num]. $chiStr;
                        $last_flag = true;
                    }
                }else{
                    $chiStr = $chiNum[$temp_num].$chiUni[$index%9] .$chiStr;
                    
                    $zero_flag = false;
                    $last_flag = false;
                }
                $index ++;
            }
        }else{
            $chiStr = $chiNum[$num_str[0]];
        }
        return $chiStr;
    }
    
    /*
    *
    */
    private function msg_jump($msg,$url){
        return "<script>alert($msg);window.location.href='$url';</script>";
    }

    /*
     * 查询订单是否已支付,用于扫码后自动跳转,
     status=1表示已支付;-1表示请求错误
    */
    public function orderPayed(){
        $orderid = input('orderid');
        if(!$orderid){
            return ['status'=>-1,'msg'=>'订单号不能为空!'];
        }
        $order = db('vc_order')->where('order_id',$orderid)->find();
        if(!$order){
            return ['status'=>-1,'msg'=>'订单不存在!'];
        }
        $status = $order['order_state'];//order_state=1支付,0未支付
        return ['status'=>$status];
    }

    /*
     * 充值处理;规定ajax方式处理;网站和app统一
    */
    public function pay(){
        
        date_default_timezone_set('PRC');
		//使用k_user,需要验证用户名是否存在
		$uid = session('uid');
		if($uid){
		    $user = session('user');
		    $username = $user['username'];
		}else{
		    $username = input('username');
		    //if(!ereg("^[0-9a-zA-Z]*$",$username)){
		    if(!preg_match("/^[0-9a-zA-Z]*$/",$username)){
                        return ['status'=>1,'msg'=>'会员帐号只能由数字、大小写字母组成!','url'=>url('index'),] ;
		    }

                    $user = db('members')->where('username',$username)->find();
                    if(!$user){
                        return ['status'=>1,'msg'=>'用户名不存在!','url'=>url('index'),] ;
                    }
                    $uid = $user['uid'];
		}
		
		$bankcode	=	$sccode		=	input('sccode');//set_config.code
		//ALIPAY   支付宝
		//WECHAT   微信支付
		//BANK     手机网银
		//WAP      微信APP
		$thirdtype	=	input('thirdtype');//thirdpay.type
		$tcode		=	input('tcode');//thirdcode.code
		$thirdid	=	input('thirdid');//thirdpay.id
		$setconfigid = $scid 		=	input('scid');
        //$transamt = isset($_POST["coin"])? trim($_POST["coin"]):trim($_POST["money"]);
        //$transamt = isset($_POST["coin"])? trim($_POST["coin"]):0;
        $transamt = input("coin")??0;

		$thirdpay = db('pay_third')->where('id',$thirdid)->find();

		$thirdcode = db('pay_channel')
		->where(['set_configid'=>$setconfigid,'thirdid'=>$thirdid,])->find();

		if(/*is_int($transamt)&&*/1==$thirdcode['money_decimal']){
		    $point = rand(1, 99);
		    $transamt += $point/100;
		}
		
		if($transamt<$thirdcode['min']){
			$str = '参数错误:不能低于最低充值金额:'.$thirdcode['min'].'元';
			return ['status'=>1,'msg'=>$str,'url'=>url('index'),] ;		 
		}
		if($transamt>$thirdcode['max']){
			$str = '参数错误:不能高于最高充值金额:'.$thirdcode['max'].'元';
                        return ['status'=>1,'msg'=>$str,'url'=>url('index'),] ;
		}

        $pay = pay($thirdtype);
        $orderid = $pay->genOrderno();

        $orderno = $orderid;        
        $amount = $transamt;
        $pay_type = $thirdtype;
        $paycode = $tcode;
        $local_code = $sccode;

        $order = [
                    'uid'       => $uid,
                    //'username'  => $username, 
                    'orderno'   => $orderno,
                    'amount'    => $amount,
                    //'business'  => $business,
                    //'item_type'=> null,
                    //'item_id'=> null,
                    //'status'    => 0,
                    'order_time' => date('Y-m-d H:i:s'),
                    //'pay_time'  => null,                    
                    'pay_name'  => $pay->getName(),
                    'pay_type'  => $pay_type,
                    'pay_code'  => $paycode,
                    'local_code' => $local_code,
                ];                
		db('orders')->insert($order);

        $params = compact('orderno','paycode','amount');
        return $pay->pay($params);
        return ['status'=>0,'msg'=>'','data'=>$pay->pay($params),];
    }

    public function pay_content($orderno){
        $order = db('orders')->where('orderno',$orderno)->find();
        echo $order['pay_content']? $order['pay_content']  : '';
    }

    /*
     * 异步通知总入口  pay/notify/thirdtype/$thirdtype
     * 原通知是多入口,在pay_third表中配置如下 
     * https://pay1.zf590.com/api/dlpay/callbackurl.php
     * https://pay1.zf590.com/api/dlpay/callbackurl.php
     */
    public function notify(){      
        //file_put_contents(dirname(__FILE__).'/log.txt', http_build_query($_REQUEST)."\r\n",FILE_APPEND);
        
        $thirdtype	=	input('thirdtype');
        $pay = pay($thirdtype);
  
        if($pay->check_success()){
            $orderno = $pay->orderno();
            $out_trade_no = $pay->out_trade_no();        
            $this->business($orderno,$out_trade_no); 
            $pay->success();
        }else{
            echo "验签失败!";
        }
    }
    
    /*
     * 业务流程
    */
    private function business($orderno,$out_trade_no=''){
        date_default_timezone_set('PRC');

        db()->startTrans();
        $order = db('orders')->lock(true)->where('orderno',$orderno)->find();
        
        try{                        
            $rows = db('orders')->where('orderno',$orderno)->where('status','neq',1)
            ->update(['status' => 1,'out_trade_no' => $out_trade_no]);
           if($rows == 1){
               $user = db('members')->where('uid',$order['uid'])->find();
               $f_balance = $user['coin'];
               $t_balance = $user['coin'] + $f_balance;

               $money = db('money')->where('type','recharge')
               ->where('item_id',$orderno)->find();
               if($money){
                   db()->rollback();
               }else{
                   $data = [
                       'uid'        =>  $order['uid'],
                       'amount'     =>  $order['amount'],
                       'f_balance'  =>  $f_balance,
                       't_balance'  =>  $t_balance,
                       'direct'     =>  0,//收入
                       'type'       =>  'recharge',
                       'item_id'    =>  $orderno,
                       'remark'     =>  '',
                       'created_at' =>  date('Y-m-d H:i:s'),                      
                   ];
                   db('money')->insert($data);
                   //添加用户账户余额
                   db('members')->where('uid',$order['uid'])->setInc('money',$order['amount']);
                   db()->commit();
                   $log_info = '支付成功且充值成功!订单号：' . $amount. '订单金额：' . $order['amount'];
                   //sys_log($order['uid'], $log_info); 
               }
           }else{
               db()->rollback();
           }
        }catch (\Exception $e) {
            db()->rollback();
            $log_info = '支付成功但充值失败!订单号：' . $orderid. '订单金额：' . $order['order_money'];
            //sys_log($order['uid'], $log_info); 
        }
    }
}