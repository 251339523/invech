<?php
// +----------------------------------------------------------------------
// | FileName: user.php
// +----------------------------------------------------------------------
// | CreateDate: 2017年10月5日
// +----------------------------------------------------------------------
// | Author: xiaoluo
// +----------------------------------------------------------------------
namespace app\index\controller;
use app\index\model\MemberBank;
use think\Db;
use app\index\Login;
use app\classes\iplocation;
use think\Session;
use app\common\model\Member as UserModel;
use app\common\model\Withdraw as WithdrawModel;
use app\common\model\Bank as BankModel;
use app\common\model\Apply as ApplyModel;

class user extends Login{

    public function logout(){
        session(null);
        cookie(null,config('cookie.prefix'));
        $url = config('auth.redirect.auth_fail.'.MODULE);
        $this->redirect('/');
    }

    public function index()
    {
        $this->view->pusher_app_key = env('broadcast.pusher_app_key');
        $this->view->pusher_cluster = env('broadcast.pusher_cluster');
        return $this->fetch('index');
    }
    
    public function main()
    {
        $where               = array() ;
        $where['uid']        = $this->user['uid'] ;
        $where['isDelete']   = 0 ;
        $where['lotteryNo']  = array('neq','') ;
        $where['actionTime'] = array('between',array(strtotime('03:00'),strtotime('03:00') + 24*3600)) ;
        $myxf = db('bets')->where($where)->field('sum(mode*beiShu*actionNum) as xiaofei')->find() ;
        $myxf['xiaofei'] = (isset($myxf['xiaofei'])  && !empty($myxf['xiaofei'])) ? $myxf['xiaofei'] : 0 ;

        $this->assign('myxf',$myxf) ;

        $notice = db('content') -> where (array('enable' => 1)) -> order('id desc') ->select();
        $this->assign('notice',$notice);
        /*
        $login = db('member_session') -> where(array('uid' => $this->user['uid'])) -> order('id desc')->limit(5)->select()->toArray();
        */
        $login = [];
        $login[0] = ['loginIP'=>2130706433,'loginTime'=>1508920728];

        $ip = new iplocation();

        foreach ($login as $key => $val) {
            $addr = $ip->getlocation($val['loginIP']);
            $login[$key]['addr'] = isset($addr['country']) ? $addr['country'] : '' ;
        }

        $this->assign('login',$login)  ;
        return $this->fetch('main') ;
    }


    public function infobak()
    {
        if ($this->request->isPost()) {
            $user = model('members')->find($this->user['uid']);
            $this->assign('user',$user);
            //echo think_ucenter_md5(input('password'),UC_AUTH_KEY),"\r\n";
            if(think_ucenter_md5(input('password'),UC_AUTH_KEY)!=$user['password']) {
                $this->error('登录密码错误') ;
            } else {
                if (model('members')->where('uid='.$this->user['uid'])->update(array('nickname'=>input('nickname'),'safepwd'=>input('safepwd')))) {
                    $this->success('修改成功');
                } else {
                    $this->error('没有改动');
                }
            }
        } else {
            $user = model('members')->find($this->user['uid']);
            $this->assign('user',$user);
            $coins = 0;
            $linecount = 0;
            $map = array();
            $map['uid'] = $this->user['uid'];
            $mybank = model('member_bank')->where($map)->find();
            $this->assign('mybank',$mybank);
            
            $map = array();
            $map['uid'] = $this->user['uid'];
            $map['isOnLine'] = 1;
            $login = model('member_session')->where($map)->order('id desc')->find();
            $ip = $this->request->ip();//new iplocation();
            $addr = $ip->getlocation($login['loginIP']);
            $login['addr']=$addr['country'];
            $this->assign('login',$login);
            
            $map = array();
            $map['parents'] = array('like','%,'.$this->user['uid'].',%');
            $childs = model('members')->where($map)->select();
            $regcount=0;
            $time = strtotime('00:00:00');
            $logins = model('member_session')->where(array('accessTime'=>array('gt',time()-15*60),'isOnLine'=>1))->order('id')->select();
            $logins2 = [] ;
            foreach($logins as $l){
                $logins2[$l['uid']]=$l;
            }

            foreach ($childs as $child) {
                $coins += $child['coin'];

                if ($child['regTime'] > $time) {
                    $regcount++ ;
                }
                if ( isset($logins2[$child['uid']]) && !empty($logins2[$child['uid']]) ) {
                    $linecount++ ;
                }
            }

            $childinfo['coins'] = $coins+$user['coin'];
            $childinfo['count'] = count($childs)+1;
            $childinfo['linecount'] = $linecount+1;
            $childinfo['regcount'] = $regcount;
            $this->assign('childinfo',$childinfo);
            return $this->fetch();
        }
        
    }
    
    public function info(){
      
        if($this->request->isPost()){
            $request = request();
            $params = $request->param();
            $uid =  $this->user->id;
            $member = UserModel::get(intval($uid));
            $info = $member->validate('Member.edit')->save($params);
            if($info){
                return  $this->success("操作成功");
            }else{
                return  $this->error(UserModel::getError());
            }
        }else{
            $userData  = $this->user;
//            var_dump($userData->username);die;
            $this->assign('userData',$userData);
             return $this->fetch();
        }
    }
    public function bank(){
        $uid =  $this->user->id;
        $memberBank = MemberBank::get(['uid'=>$uid]);
        if($this->request->isPost()){
            $request = request();
            $params = $request->param();
            $validate = validate('Member');
            $ret = $validate->scene('bank')->check($params);
            if(!$ret){
                 return  $this->error($validate->getError());
            }
            if (!$memberBank){
                $memberBank = new MemberBank();
            }
            $memberBank->bankId = $params['bank_name'];  //银行名称
            $memberBank->username = $params['bank_username']; //开户人
            $memberBank->account =$params['bank_account'];   //银行账号
            $memberBank->subBankName = $params['bank_address'];//开户支行
            $memberBank->uid =$uid;//用户ID
            $info = $memberBank->save();

             if($info==0 || $info){
                return  $this->success("操作成功");
            }else{
                return  $this->error(UserModel::getError());
            }
        }else{
            $bankList = Db::name('bankList')->select()->toArray();
            if ($memberBank){
                $this->assign('memberBank',$memberBank->toArray());
            }else{
                $this->assign('memberBank',[]);
            }
            $this->assign('banklist',$bankList);
            return $this->fetch();
        }
       
    }

    /*
    public function withdraw(){
        $uid =  $this->user->id;
        $member = UserModel::get(intval($uid));
        if($this->request->isPost()){
            $request = request();
            $params = $request->param();
            $params['uid']  = $member->uid;
            $params['bank'] = $member->bank;
            $params['handled_at'] = date("Y-m-d: H:i:s",time());
            $withdraw = new WithdrawModel($params);
            $list = $withdraw->validate('Member.withdraw')->save($params);
            if($list){
               return  $this->success("操作成功");
            }else{
              return  $this->error($withdraw->getError());
            }
        }else{
            $info = WithdrawModel::get(['uid'=>intval($uid)]);
            $this->assign('info',$info); 
            $this->assign('member',$member); 
            return $this->fetch();
        }
    }
    */
    public final function getOrdered($type=null)
    {
        if(!$this->type) $this->type = input('type','','intval');
        $this->fetch('index/inc_game_order_history'); die;
    }

    public function inbox()
    {        
        $query = $this->user->getInboxBuilder();
        //这里设置常规查询条件即可;
        $list = $query->paginate();
        return $this->fetch();
    }        

    public function agent()
    {        
        //代理申请
        if(IS_GET){
            return $this->fetch();    
        }else{
            $ret = $this->user->apply('agent');
        }        
    }

    public function withdraw()
    {
        //提现申请
        if(IS_GET){
            return $this->fetch();
        }else{
            $ret = $this->user->apply('withdraw');
        }        
    }   

    public function password()
    {        
        if(IS_GET){
            return $this->fetch();    
        }else{
            
        }        
    }        

    public function money_record()
    {        
        if(IS_GET){
            return $this->fetch();    
        }else{
            
        }        
    }      

    public function recharge_record()
    {        
        if(IS_GET){
            return $this->fetch();    
        }else{
            
        }        
    }    

    public function bet_record()
    {        
        if(IS_GET){
            return $this->fetch();    
        }else{
            
        }        
    }   

    public function bet_detail()
    {        
        if(IS_GET){
            return $this->fetch();    
        }else{
            
        }        
    }     

    public function withdraw_record()
    {        
        if(IS_GET){
            return $this->fetch();    
        }else{
            
        }        
    }        

    public function backwater_record()
    {        
        if(IS_GET){
            return $this->fetch();    
        }else{
            
        }        
    }                        
}