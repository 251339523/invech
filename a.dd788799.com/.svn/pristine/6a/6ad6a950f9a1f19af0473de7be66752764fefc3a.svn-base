<?php

namespace app\auth\traits;

use app\service\Str;

trait UserProvider
{
    protected $model;

    public function setModel($model)
    {
        $this->model = new $model();
    }

    public function retrieveById($identifier)
    {
        return $user = $this->model->find($identifier);
    }


    public function retrieveByToken($identifier, $token)
    {
        $user = $this->model->find($identifier);
     
        if (! $user) {
            return null;
        }

        $rememberToken = $user->getRememberToken();

        //return $rememberToken && hash_equals($rememberToken, $token) ? $user : null;

        return $rememberToken && ($token == $rememberToken) ? $user : null;
    }


    public function retrieveByCredentials(array $credentials)
    {
        if (empty($credentials)) {
            return;
        }
        
        $query = $this->model->getQuery();

        foreach ($credentials as $key => $value) {
            if (! Str::contains($key, 'password')) {
                $query->where($key, $value);
            }
        }

        return $query->find();
    }


    public function validateCredentials($user, array $credentials)
    {
        return md5($credentials['password']) == $user->getAuthPassword();
        //return container('hasher')->check($credentials['password'],$user->getAuthPassword());
    }
}
