<?php
namespace app\common\model;
use think\Model;

use app\common\model\attach\MoneyRecordTrait;

class BackWater extends Base{

    protected $table = 'gygy_backwater';
    protected $createTime = 'created_at';
    protected $updateTime = '';
    protected $autoWriteTimestamp = 'datetime';

    use MoneyRecordTrait;

    public function money()
    {
        return $this->morphMany('Money',['type','item_id'],'backwater');
    }
    
    //-------------------前台--------------------
    public static function getQlist($request){
        $params =   $request->param();
        $query  =   self::order('id desc');
        if($params['startTime']??''){  
            $query->where('created_at', '>=', $params['startTime']);         
        }
        if($params['endTime']??''){
            $query->where('created_at', '<=', $params['endTime']);
        }
        $query->where('uid',$request->user()->id);
        $options = $query->getOptions();
        $data   =   [];
        $CountAmount    =   $query->sum('amount'); 
        $data['list']   =   $query->options($options)->paginate();
        $data['CountAmount']    =  $CountAmount?$CountAmount:0;
        $PageAmount = 0;
        foreach ($data['list'] as $v){
            $PageAmount = bcadd($PageAmount,$v->amount,2);
        }
        $data['PageAmount']     =  $PageAmount;
        return $data;
    }

    public function user(){
        return $this->belongsTo('Member','uid','uid');
    }

    public function item(){
        return $this->morphTo(['type','item_id'],[
            'recharge'      =>  'app\common\model\Order',
            'withdraw'      =>  'app\common\model\Withdraw',
            'bet'           =>  'app\common\model\Bet',
            'backwater'     =>  'app\common\model\BackWater',
            'commission'    =>  'app\common\model\Commission',
            'bonus'         =>  'app\common\model\Bonus',
        ]);
    }
}
